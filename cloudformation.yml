---
Description: Send Log Streams to Elastic

Parameters:
  ElasticUrl:
    Type: String
    Description: Url of Elasticsearch with username and password

Resources:
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref AWS::StackName
      Description: Send Log Streams to Elastic
      Runtime: nodejs16.x
      Timeout: 5
      MemorySize: 256
      Handler: index.handler
      Code:
        ZipFile: exports.handler = async function handler (event) {console.log(JSON.stringify(event, null, 2))} # dummy funtion
      Role: !Sub ${ExecutionRole.Arn}
      Environment:
        Variables:
          ELASTIC_URL: !Ref ElasticUrl

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      Action: 'lambda:InvokeFunction'
      Principal: logs.eu-central-1.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName} # note: the /aws/lambda/ is mandatory as logstreams are automatically created by AWS in this LogGroup
      RetentionInDays: 7

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
